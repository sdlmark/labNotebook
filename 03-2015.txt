02-03-2015
==========

TODAY:
- try running HTSeq with parameters that make sense on an AF20 sample
	- first make a sorted bam file for AF20-2.Aligned.bam
		$ samtools sort -n AF20-2.Aligned.bam AF20-2.sorted 2>AF20-2.sorting.err
	$ htseq-count
	--format=bam
	--stranded=yes
	--mode=intersection-nonempty
	--idattr=Parent
	--type=exon
	AF20.sorted.bam
	~/c_briggsae.WBonly.gff3 
	> AF20-2.countWB.test
	2>AF20.2.countWB.err
	** yields 11769 genes with a non-zero count**
	** compare to same parameters on AF14-1: yielded 11496**
	** "Pseudogene" matches at beginning**
- made file countNotes.txt to keep track of parameters and results
- there are ~2.0*10^4 genes in C. briggsae
- it seems that many, many reads are not being counted...not sure why
	- try to find parameters that minimize the number of reads with
	  no_feature
	- perhaps try different modes (i.e. union, intersection-empty)
- continued with bash script tutorial
	- how to get input data from user:
		- command line argument (best for most scenarios-->can see in history
		- read -p (good for sensitive info; not stored)
		- redirected via STDIN (for piping, processing data)

NEXT:
- fill out countNotes.txt with results from new tests with different
  parameters
- continue with bash script tutorial
- make a bash script to automate sorting bam files
- read Git tutorial suggested by Jeremy


03-03-2015
==========

TODAY:
- looked at preliminary data for different parameters in HTSeq (using R)
	- looks like data might not be stranded after all...
- meeting with Asher


NEXT:
- write bash script to automate 1. sorting bam files, 2. htseq 
- look at SAM files in IGV to determine strandedness...
