02-03-2015
==========

TODAY:
- try running HTSeq with parameters that make sense on an AF20 sample
	- first make a sorted bam file for AF20-2.Aligned.bam
		$ samtools sort -n AF20-2.Aligned.bam AF20-2.sorted 2>AF20-2.sorting.err
	$ htseq-count
	--format=bam
	--stranded=yes
	--mode=intersection-nonempty
	--idattr=Parent
	--type=exon
	AF20.sorted.bam
	~/c_briggsae.WBonly.gff3 
	> AF20-2.countWB.test
	2>AF20.2.countWB.err
	** yields 11769 genes with a non-zero count**
	** compare to same parameters on AF14-1: yielded 11496**
	** "Pseudogene" matches at beginning**
- made file countNotes.txt to keep track of parameters and results
- there are ~2.0*10^4 genes in C. briggsae
- it seems that many, many reads are not being counted...not sure why
	- try to find parameters that minimize the number of reads with
	  no_feature
	- perhaps try different modes (i.e. union, intersection-empty)
- continued with bash script tutorial
	- how to get input data from user:
		- command line argument (best for most scenarios-->can see in history
		- read -p (good for sensitive info; not stored)
		- redirected via STDIN (for piping, processing data)

NEXT:
- fill out countNotes.txt with results from new tests with different
  parameters
- continue with bash script tutorial
- make a bash script to automate sorting bam files
- read Git tutorial suggested by Jeremy


03-03-2015
==========

TODAY:
- looked at preliminary data for different parameters in HTSeq (using R)
	- looks like data might not be stranded after all...
- Meeting:
	- receipts say that the reads are stranded...
	- but counts for stranded runs seem off...
	- find out what's going on! are reads stranded? what is HTSeq doing?!


04-03-2015
==========

TODAY:
- figure out whether the reads are stranded
- figure out what is going on with HTSeq--how does it actually work?
- doesn't look like STAR has any options for strandedness (not an issue)
- trying to look at an alignment in IGV...
	- only takes indexed BAM files?
	- BAM files can only be indexed when not sorted by name?
- Wei thinks that most of the reads should be reversed
	- due to RT-PCR
	- try --stranded=reverse again, but with an exon-only gff
		- much more success with this!
- the high degree of ambiguity may be due to genes that use the same exons
	- denoted in the gff as "CBG:12345a" etc.
	- running HTSeq again with these exons omitted to see how much these
	  are biasing the ambiguity count
		- result decreases ambiguity, and in the case of the forward
		  stranded condition, greatly! (only 14 ambiguous counts!)
	- however, can't leave them out completely!
		- at first I thought that it was randomly assigning the most
		  reads to the "a" variant, but this is not the case
		- some transcripts are very different (CBG19793) and only have
		  a few exons in common
		- so I'm not sure what the benefit to leaving them out might
		  be...
		- 889 exons belong to more than one gene
		- 122448 exons are not shared
- also trying mRNA + reverse
	- perhaps this can avoid the ambiguity problem since they seem unique
	- there are some variants, but fewer in the mRNA + forward counts
	- looks good; about as good as exon + reverse
	- ambiguity might just be proportional and scale with mRNA...
	- looks like 83 mRNA transcripts have more than one variant

NEXT:
- look at genes that were counted in the mRNA + reverse condition
- try to figure out which would be the best parameters to use, which make the
  most sense
- continue with bash script tutorials
- talk to Asher about summer student
- email links to summer student


05-03-2015
==========

TODAY:
- Wei made another gff that ignores splicing variants
- said it was not a good idea to use mRNA only...not completely sure why
- seems acceptable to run exon + reverse with WBexon_only.gff3
- write a bash script that automates that
- trying to pipe samtools stdout to htseq so that I don't have to create extra
  sorted files (and store them)
	- doesn't appear to work...the temporary BAM files don't merge
	- will probably have to sort them separately
- working on making a bash script to automate 
	- learned how to iterate through files in a folder
	#!/bin/bash
	folder=$1
	for file in $folder; do echo $file*; done

NEXT:
- finish bash script for automating samtools sort -n
- run said script
- start bash script for automating htseq with exon + reverse


10-03-2015
==========

TODAY:
- prepare for meeting
	- what have I done so far regarding HTSeq?
- email H regarding Linux emulator
- compare exon-only reverse with exon-only not stranded
	- same genes being expressed? 
	- same genes being expressed to same degree?
	- perhaps try to concatenate into one file that you can look at in R

MEETING:
- go with reverse/not-stranded with exon-only gff
- look into parallelization
	- package for python/bash?
	- run several files through the same step at the same time
- Ne is basically a measure of the potential strength of drift
- classical pop gen assumes that any site is only biallelic
	- i.e. one allele is the mutant and the other is ancestral
	- this is also conditional on an infinite-sites model (each site can
	  only experience one mutation)
- triallelic sites are rare, but exist
	- their presence depends on either a high mutation rate or a large Ne
	  (or both)
- continue to think about why reverse while moving on with HTSeq

NEXT:
- compare exon-only reverse with exon-only not stranded; look for expression
- email H regarding Linux emulator
- bash scripting
- python parallelization
	- ask Wei?
